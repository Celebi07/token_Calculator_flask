# -*- coding: utf-8 -*-
"""new_premium_plan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mZSnlYpRIQRB6Qk1Zs5xklekYVyzJYfz
"""


# Commented out IPython magic to ensure Python compatibility.
# %pip install --upgrade tiktoken


    
import os  
import requests
from flask import Flask,request,jsonify
from flask_cors import CORS,cross_origin
app = Flask(__name__)
env_config = os.getenv("PROD_APP_SETTINGS", "config.DevelopmentConfig")
app.config.from_object(env_config)
CORS(app)

@app.route('/',methods = ['GET'])
def hello_world():
    d = {}
    
    api_key = '21XTTGBDL2CBO627'
    base_url = 'https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE'
    import tiktoken
    encoding = tiktoken.get_encoding("p50k_base")

    model_map = {
            "1": "gpt-3.5-turbo",
            "2": "gpt-3.5-turbo-0301"
        }
    print("Choose a model:")
    print("1. gpt-3.5-turbo")
    print("2. gpt-3.5-turbo-0301")
    #model_choice = input("Enter ")
    model_choice = str(request.args['model'])
    if model_choice in model_map:
            selected_model = model_map[model_choice]
    else:
            print("Invalid option. Using default model gpt-3.5-turbo.")
            selected_model = "gpt-3.5-turbo"

    encoding = tiktoken.encoding_for_model(selected_model)
    encoding.encode("tiktoken is great!")
    def num_tokens_from_string(string: str, encoding_name: str) -> int:
        """Returns the number of tokens in a text string."""
        encoding = tiktoken.get_encoding(encoding_name)
        num_tokens = len(encoding.encode(string))
        return num_tokens

    prompt1 = str(request.args['Query2'])
    System_tokens = num_tokens_from_string(prompt1, "p50k_base")
    prompt2 = str(request.args['Query'])
    User_tokens = num_tokens_from_string(prompt2, "p50k_base")
    prompt3 = str(request.args['Query1'])
    Assistant_tokens = num_tokens_from_string(prompt3, "p50k_base")
    total_tokens = System_tokens + User_tokens + Assistant_tokens
    cost_per_1000_tokens = 0.002 / 1000 
    cost = cost_per_1000_tokens * total_tokens
    from_c = 'USD'
    to_c = str(request.args['lang'])
    #to_c = input("E")
    amount = float(cost)

    main_url = f'{base_url}&from_currency={from_c}&to_currency={to_c}&apikey={api_key}'

    response = requests.get(main_url)
    results = response.json()
    key = results['Realtime Currency Exchange Rate']
    rate = float(key['5. Exchange Rate'])
    print(f"System Tokens: {System_tokens}")
    print(f"User Tokens: {User_tokens}")
    print(f"Assistant Tokens: {Assistant_tokens}")
    print(f"Total Tokens: {total_tokens}")
    print('Converted Amount')
    print(f'{rate * amount}')
    d['Query'] = str(request.args['Query'])
    d['Query1'] = str(request.args['Query1'])
    d['Query2'] = str(request.args['Query2'])
    d['system_tokens'] = System_tokens
    d['user_tokens'] = User_tokens
    d['assistant_tokens'] = Assistant_tokens
    d['total_tokens'] = total_tokens
    d['cost'] = rate*amount
    d['response'] = results
    return jsonify(d)

if __name__ == '__main__':
    app.debug = True
    app.run()


